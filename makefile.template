
# This file is a part of __PROGRAM_NAME__ __PROGRAM_VERSION__
#
# This file installs __PROGRAM_NAME__ in the operating system, cleans
# temporary files and directory in the project.
#
# __PROGRAM_COPYRIGHT__ __PROGRAM_AUTHOR__ __PROGRAM_AUTHOR_EMAIL__
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


# Names section

PROG = __PROGRAM_NAME__

TARGET_README = README
TARGET_NEWS = NEWS
TARGET_LICENSE = LICENSE
TARGET_APP_DIR = $(PROG)


# Build section

M4 = m4 -P
M4DIR = m4

SELF = Makefile

SRC_TEMPLATE_DIR = src_template

SRC_APP_DIR = app
SRC_SYS_DIR = sys

build_dir = build
BUILD_DIR = $(build_dir)

BUILD_APP_DIR = app
BUILD_SYS_DIR = sys

BUILD_DOCS_DIR = docs

VERSION_M4 = $(M4DIR)/version.m4


SRC_MAIN_PY = main.py
SRC_RUNAPP_SH = $(PROG)-run.sh
SRC_APP_SERVICE = $(PROG).service

SRC_STATIC_DIR = static
SRC_TEMPLATES_DIR = templates
SRC_JS_DIR = $(SRC_STATIC_DIR)/js

SRC_BASE_HTML = $(SRC_TEMPLATES_DIR)/base.html
SRC_INDEX_HTML = $(SRC_TEMPLATES_DIR)/index.html
SRC_TEST_JS = $(SRC_JS_DIR)/test.js


# Install section

COPYTREECMD = cp -R

app_dir = /usr/local/web
runappsh_dir = /usr/local/bin
service_dir = /etc/systemd/system
docs_dir = /usr/share/doc

APP_INSTALL_DIR = $(app_dir)
RUNAPPSH_INSTALL_DIR = $(runappsh_dir)
SERVICE_INSTALL_DIR = $(service_dir)
DOCS_INSTALL_DIR = $(docs_dir)/$(PROG)


# Commands

all: build

help:
	@echo "usage: make [ clean | install | uninstall ]"

build:
	@[ -d $(BUILD_DIR) ] $&& rm -rf $(BUILD_DIR)
	@mkdir $(BUILD_DIR)

	@mkdir $(BUILD_DIR)/$(BUILD_DOCS_DIR)
	@$(M4) $(VERSION_M4) $(TARGET_README) > $(BUILD_DIR)/$(BUILD_DOCS_DIR)/$(TARGET_README)
	@$(M4) $(VERSION_M4) $(TARGET_NEWS) > $(BUILD_DIR)/$(BUILD_DOCS_DIR)/$(TARGET_NEWS)
	@cp $(TARGET_LICENSE) $(BUILD_DIR)/$(BUILD_DOCS_DIR)/$(TARGET_LICENSE)

	@mkdir $(BUILD_DIR)/$(BUILD_APP_DIR)
	@$(M4) $(VERSION_M4) $(SRC_TEMPLATE_DIR)/$(SRC_APP_DIR)/$(SRC_MAIN_PY) > $(BUILD_DIR)/$(BUILD_APP_DIR)/$(SRC_MAIN_PY)

	@mkdir $(BUILD_DIR)/$(BUILD_SYS_DIR)
	@$(M4) $(VERSION_M4) $(SRC_TEMPLATE_DIR)/$(SRC_SYS_DIR)/$(SRC_RUNAPP_SH) > $(BUILD_DIR)/$(BUILD_SYS_DIR)/$(SRC_RUNAPP_SH)
	@$(M4) $(VERSION_M4) $(SRC_TEMPLATE_DIR)/$(SRC_SYS_DIR)/$(SRC_APP_SERVICE) > $(BUILD_DIR)/$(BUILD_SYS_DIR)/$(SRC_APP_SERVICE)

	@mkdir $(BUILD_DIR)/$(BUILD_APP_DIR)/$(SRC_STATIC_DIR)
	@mkdir $(BUILD_DIR)/$(BUILD_APP_DIR)/$(SRC_TEMPLATES_DIR)
	@mkdir $(BUILD_DIR)/$(BUILD_APP_DIR)/$(SRC_JS_DIR)

	@$(M4) $(VERSION_M4) $(SRC_TEMPLATE_DIR)/$(SRC_APP_DIR)/$(SRC_BASE_HTML) > $(BUILD_DIR)/$(BUILD_APP_DIR)/$(SRC_BASE_HTML)
	@$(M4) $(VERSION_M4) $(SRC_TEMPLATE_DIR)/$(SRC_APP_DIR)/$(SRC_INDEX_HTML) > $(BUILD_DIR)/$(BUILD_APP_DIR)/$(SRC_INDEX_HTML)
	@$(M4) $(VERSION_M4) $(SRC_TEMPLATE_DIR)/$(SRC_APP_DIR)/$(SRC_TEST_JS) > $(BUILD_DIR)/$(BUILD_APP_DIR)/$(SRC_TEST_JS)

	@echo "$(PROG) has built in the \`$(BUILD_DIR)' directory."

clean:
	@rm -rf $(BUILD_DIR)
	@rm -f $(SELF)

	@echo "$(PROG) has cleaned."

install:
	@[ -d $(BUILD_DIR) ] || { \
            echo "error: Build directory not found." 1>&2;\
            echo "error: Should to run \`make' first." 1>&2;\
            exit 1;\
        }

	install -d $(DOCS_INSTALL_DIR)
	install -m 644 $(BUILD_DIR)/$(BUILD_DOCS_DIR)/$(TARGET_README) $(DOCS_INSTALL_DIR)/$(TARGET_README)
	install -m 644 $(BUILD_DIR)/$(BUILD_DOCS_DIR)/$(TARGET_NEWS) $(DOCS_INSTALL_DIR)/$(TARGET_NEWS)
	install -m 644 $(BUILD_DIR)/$(BUILD_DOCS_DIR)/$(TARGET_LICENSE) $(DOCS_INSTALL_DIR)/$(TARGET_LICENSE)

	install -d $(APP_INSTALL_DIR)
	$(COPYTREECMD) $(BUILD_DIR)/$(BUILD_APP_DIR) $(APP_INSTALL_DIR)/$(TARGET_APP_DIR)

	install -d $(RUNAPPSH_INSTALL_DIR)
	install -m 755 $(BUILD_DIR)/$(BUILD_SYS_DIR)/$(SRC_RUNAPP_SH) $(RUNAPPSH_INSTALL_DIR)/$(SRC_RUNAPP_SH)

	install -d $(SERVICE_INSTALL_DIR)
	install -m 644 $(BUILD_DIR)/$(BUILD_SYS_DIR)/$(SRC_APP_SERVICE) $(SERVICE_INSTALL_DIR)/$(SRC_APP_SERVICE)
	systemctl enable $(SRC_APP_SERVICE)
	systemctl start $(SRC_APP_SERVICE)

	@echo "$(PROG) has installed."

uninstall:
	systemctl stop $(SRC_APP_SERVICE)
	systemctl disable $(SRC_APP_SERVICE)
	rm -f $(SERVICE_INSTALL_DIR)/$(SRC_APP_SERVICE)

	rm -rf $(APP_INSTALL_DIR)/$(TARGET_APP_DIR)
	rm -rf $(DOCS_INSTALL_DIR)

	@echo "$(PROG) has uninstalled."

.PHONY: all help build clean install uninstall
